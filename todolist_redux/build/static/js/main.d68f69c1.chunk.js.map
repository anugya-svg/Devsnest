{"version":3,"sources":["components/input.jsx","actions/index.js","components/app.jsx","reducers/index.js","reducers/combineReducers.js","store.js","index.js"],"names":["Box","useState","item","setItem","dispatch","useDispatch","todo","useSelector","state","addTodo","Input","variant","placeholder","size","value","onChange","e","target","Button","color","className","onClick","type","payload","add","title","checked","map","ele","index","Checkbox","checkbox","style","textDecoration","remove","App","check","action","filter","rootReducer","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"wNAuCeA,EAlCL,WACN,MAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAASC,cACTC,EAAKC,aAAY,SAACC,GAAD,OAASA,EAAMC,WAEtC,OACI,gCACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWC,YAAY,iBAAiBC,KAAK,QAAQC,MAAOZ,EAAMa,SAAU,SAACC,GACxFb,EAAQa,EAAEC,OAAOH,UAErB,cAACI,EAAA,EAAD,CAAQP,QAAQ,YAAaQ,MAAM,UAAUC,UAAU,MAAMP,KAAK,SAASQ,QAAS,WAChFjB,EChBN,SAACF,GACP,MAAM,CACFoB,KAAK,MACLC,QAAQrB,GDaSsB,CAAI,CACTC,MAAMvB,EACNwB,SAAQ,KACZvB,EAAQ,KAJZ,iBAMA,qBAAKiB,UAAU,OAAf,SACId,EAAKqB,KAAI,SAACC,EAAIC,GAAL,OAAc,8BACpB,sBAAKT,UAAU,MAAf,UACK,cAACU,EAAA,EAAD,CAAUT,QAAS,WACnBjB,ECbT,SAACyB,GACZ,MAAM,CACFP,KAAK,WACLC,QAAQM,GDUiBE,CAASF,OAGrBD,EAAIF,QAAU,qBAAIM,MAAO,CAACC,eAAe,gBAA3B,cAA8CL,EAAIH,SAAe,mCAAMG,EAAIH,SAE3F,cAACP,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYN,KAAK,QAAQQ,QAAS,WAChEjB,ECzBV,SAACyB,GACV,MAAM,CACFP,KAAK,SACLC,QAAQM,GDsBgBK,CAAOL,KADpB,wBAR8BA,YEblCM,EARL,WACN,OACI,sBAAKf,UAAU,YAAf,UACI,2CACA,cAAC,EAAD,Q,wBCMGgB,EAXH,WAAoB,IAAnB5B,EAAkB,uDAAZ,GAAG6B,EAAS,uCAC3B,MAAiB,QAAdA,EAAOf,KACJ,GAAN,mBAAWd,GAAX,CAAiB6B,EAAOd,UACD,WAAdc,EAAOf,KACTd,EAAM8B,QAAO,SAAChC,EAAKuB,GAAN,OAAcA,IAAQQ,EAAOd,WAC3B,aAAdc,EAAOf,KAEJd,EAAMmB,KAAI,SAACrB,EAAKuB,GAAN,OAAcA,IAAQQ,EAAOd,QAAf,2BAA2BjB,GAA3B,IAAgCoB,SAASpB,EAAKoB,UAASpB,KAEnFE,GCHI+B,EAJGC,YAAgB,CAC9B/B,QAAQ2B,ICAGK,EADHC,YAAYC,G,MCIxBC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.d68f69c1.chunk.js","sourcesContent":["import { Input,Button,Checkbox } from '@material-ui/core';\r\nimport {add,remove,checkbox} from \"../actions/index\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {useState} from \"react\"\r\nimport { useSelector } from 'react-redux';\r\nconst Box=()=>{\r\n    const [item,setItem]=useState(\"\");\r\n    const dispatch=useDispatch();\r\n    const todo=useSelector((state)=>state.addTodo)\r\n    \r\n    return(\r\n        <div>\r\n            <Input variant=\"standard\" placeholder=\"Type something\" size=\"small\" value={item} onChange={(e)=>{\r\n                setItem(e.target.value)\r\n            }}></Input>\r\n            <Button variant=\"contained\"  color=\"default\" className=\"btn\" size=\"medium\" onClick={()=>{\r\n                dispatch(add({\r\n                    title:item,\r\n                    checked:false}))\r\n                setItem(\"\")\r\n            }} >ADD</Button>\r\n            <div className=\"item\" >\r\n               {todo.map((ele,index)=>(<div key={index}>\r\n                   <div className=\"ele\">\r\n                        <Checkbox onClick={()=>{\r\n                        dispatch(checkbox(index))\r\n                        }}></Checkbox>\r\n                   \r\n                    {ele.checked?( <h3 style={{textDecoration:\"line-through\"}}> {ele.title}</h3> ): <h3> {ele.title}</h3> }\r\n                   \r\n                   <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={()=>{\r\n                       dispatch(remove(index))\r\n                   }}>Delete</Button></div>\r\n                </div>))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Box;","const add=(item)=>{\r\n    return{\r\n        type:\"Add\",\r\n        payload:item\r\n    }\r\n}\r\nconst remove=(index)=>{\r\n    return{\r\n        type:\"Remove\",\r\n        payload:index\r\n    }\r\n}\r\nconst checkbox=(index)=>{\r\n    return{\r\n        type:\"Checkbox\",\r\n        payload:index\r\n    }\r\n}\r\nexport {add,remove,checkbox};","import Input from \"./input\"\r\nconst App=()=>{\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>TODO LIST</h1>\r\n            <Input/>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","const check=(state=[],action)=>{\r\n    if(action.type===\"Add\")\r\n    return [...state,action.payload]\r\n    else if (action.type===\"Remove\")\r\n    return state.filter((todo,index)=>index!==action.payload)\r\n    else if(action.type===\"Checkbox\")\r\n    {   \r\n        return state.map((todo,index)=>index===action.payload?{...todo,checked:!todo.checked}:todo)\r\n    }\r\n    return state;\r\n}\r\nexport default check;","import check from \"./index\"\r\nimport { combineReducers } from \"redux\"\r\nconst rootReducer=combineReducers({\r\n    addTodo:check,\r\n    \r\n})\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers/combineReducers\"\r\nconst store=createStore(reducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app\";\nimport store from \"./store\"\nimport { Provider } from 'react-redux';\nimport './style.css'\nReactDOM.render(\n  <Provider store={store}> \n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}