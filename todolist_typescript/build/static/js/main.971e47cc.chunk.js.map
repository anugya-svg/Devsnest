{"version":3,"sources":["themeContext.tsx","themeToggle.tsx","App.tsx","index.tsx"],"names":["initialState","theme","setTheme","ThemeContext","createContext","ThemeToggle","useContext","onClick","className","App","useState","text","setText","todo","setTodo","Provider","value","onChange","e","target","title","map","temp","ReactDOM","render","document","getElementById"],"mappings":"gMAKMA,EAA8B,CAChCC,OAAM,EACNC,SAAS,SAACD,MAGCE,EADIC,wBAAgCJ,G,OCKpCK,MAXf,WACI,MAAuBC,qBAAWH,GAA3BF,EAAP,EAAOA,MAAMC,EAAb,EAAaA,SACb,OACG,wBAAQK,QAAS,WACbL,GAAUD,IACXO,UAAWP,EAAO,YAAY,OAFjC,SAGKA,EAAO,QAAQ,UC0BZQ,MA7Bf,WACE,MAAuBC,oBAAkB,GAAzC,mBAAOT,EAAP,KAAaC,EAAb,KACA,EAAqBQ,mBAAiB,IAAtC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAqBF,mBAAqB,IAA1C,mBAAOG,EAAP,KAAYC,EAAZ,KACA,OAEE,cAAC,EAAaC,SAAd,CAAuBC,MAAO,CAACf,QAAMC,YAArC,SACE,sBAAKM,UAAWP,EAAM,UAAU,KAAhC,UACE,sBAAKO,UAAU,YAAf,UACA,uBAAOS,SAAU,SAACC,GACdN,EAAQM,EAAEC,OAAOH,QAClBA,MAAOL,EAAMH,UAAU,UAC1B,wBAAQD,QAAS,WACfO,EAAQ,GAAD,mBAAKD,GAAL,CAAU,CAACO,MAAMT,MACxBC,EAAQ,KACPJ,UAAU,MAHb,iBAIA,qBAAKA,UAAU,OAAf,SACCK,EAAKQ,KAAI,SAACC,GAAD,OACR,qBAAKd,UAAU,UAAf,SAA0Bc,EAAKF,gBAKnC,cAAC,EAAD,U,MCxBNG,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.971e47cc.chunk.js","sourcesContent":["import {createContext} from \"react\"\r\ninterface ThemeContextType{\r\n    theme:boolean,\r\n    setTheme:(theme:boolean)=>void\r\n}\r\nconst initialState:ThemeContextType={\r\n    theme:false,\r\n    setTheme:(theme:boolean)=>{}\r\n}\r\nconst ThemeContext=createContext<ThemeContextType>(initialState);\r\nexport default ThemeContext;","import { useContext } from \"react\"\r\nimport ThemeContext from \"./themeContext\"\r\n\r\nfunction ThemeToggle() {\r\n    const {theme,setTheme}=useContext(ThemeContext)\r\n    return (\r\n       <button onClick={()=>{\r\n           setTheme(!theme)\r\n       }} className={theme ?\"mode-dark\":\"mode\"}>\r\n           {theme ?\"Light\":\"Dark\"}\r\n       </button>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle\r\n","import React,{useContext,useState} from 'react';\nimport ThemeContext from './themeContext';\nimport ThemeToggle from './themeToggle'\ninterface todoType{\n  title:string;\n}\nfunction App() {\n  const [theme,setTheme]=useState<boolean>(false);\n  const [text,setText]=useState<string>(\"\");\n  const [todo,setTodo]=useState<todoType[]>([]);\n  return (\n\n    <ThemeContext.Provider value={{theme,setTheme}}>\n      <div className={theme?\"bg-dark\":\"bg\"}>\n        <div className=\"container\">\n        <input onChange={(e)=>{\n            setText(e.target.value);\n        }} value={text} className=\"input\"/>\n        <button onClick={()=>{\n          setTodo([...todo,{title:text}]);\n          setText(\"\")\n        }} className=\"btn\">Add</button>\n        <div className=\"todo\">\n        {todo.map((temp)=>(\n          <div className=\"content\">{temp.title}</div>\n        ))}\n        </div>\n        \n      </div>\n      <ThemeToggle/>\n    </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n  \n);\n\n"],"sourceRoot":""}